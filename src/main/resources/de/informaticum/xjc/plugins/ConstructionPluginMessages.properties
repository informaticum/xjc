# A. Description of the XJC Plugin
OPTION_DESCRIPTION=Generates construction code, i.e., constructors, builders, clones, factory methods.

# B. Description of the XJC Plugin's Options
DEFAULT_CONSTRUCTOR_DESCRIPTION          =Generate default constructor. \
                                          Default: false
VALUES_CONSTRUCTOR_DESCRIPTION           =Generate all-values constructor (automatically enables option ''{0}'').  \
                                          Default: false
BASIC_CONSTRUCTOR_DESCRIPTION            =Generate basic-values constructor, based on all required fields (automatically enables option ''{0}'').  \
                                          Default: false
COPY_CONSTRUCTOR_DESCRIPTION             =Generate copy constructor (automatically enables option ''{0}'').  \
                                          Default: false
PROTECTED_DEFAULT_CONSTRUCTOR_DESCRIPTION=Modify the accessibility of the default constructors onto ''protected'' (automatically enables option ''{0}'').  \
                                          Default: false
CLONE_DESCRIPTION                        =Generate ''{0}'' method. \
                                          (Before activating this option, think about your idea twice. For example, read Effective Java, 3rd edition, Item 13: Override clone judiciously.) \
                                          Note, for some fields the current generic clone method may not return a perfect deep clone but a shallow clone. \
                                          Default: false
BUILDER_DESCRIPTION                      =Generate builder (automatically enables option ''{0}'').  \
                                          Default: false
FACTORY_WITHER_DESCRIPTION               =Generate ''#withXyz(T)'' factory methods (automatically enables option ''{0}'').  \
                                          Default: false
ADDITIONAL_WITHER_DESCRIPTION            =Generate additional Builder ''#withXyz(T)'' methods for collection fields (has no effect if ''{0}'' is disabled); \
                                          Further, generate additional ''#withXyz(T)'' factory methods (has no effect if ''{1}'' is disabled). \
                                          Default: false
HIDDEN_FACTORIES_DESCRIPTION             =Hide default factory methods of object factories.  \
                                          Default: false
REMOVE_FACTORIES_DESCRIPTION             =Remove default factory methods of object factories (automatically disables option ''{0}'').  \
                                          Default: false

# C. Main Javadoc Contents and Javadoc Supply (@param, @throws, etc.)
CONSTRUCTOR_JAVADOC_BEGIN      =<p>Creates a new instance of this class. In detail,
CONSTRUCTOR_JAVADOC_SUPER_CLASS=the {0} constructor of the super class is called, and then
CONSTRUCTOR_JAVADOC_END        =all declared fields are assigned in succession.</p>
BLUEPRINT_ARGUMENT=the blueprint instance
ILLEGAL_BLUEPRINT =iff the given blueprint instance is invalid (e.g., is '{'@code null'}' or any required field is '{'@code null'}')
PROTECTED_CONSTRUCTOR_IMPLNOTE=@implNote In order to increase code robustness, \
                                         this constructor has been refactored by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                         In result, the access modifier is '{'@code protected'}' now. \
                                         (Note, since JAX-B''s reflective instantiation bases on a default constructor, it has not been removed entirely. \
                                         Likewise, it cannot be set to '{'@code private'}' because the similarly kept sub-classes'' constructors must have access to this constructor.)
ALTERNATIVE_CONSTRUCTORS      =          In order to create instances of this class, use any other constructor of this class.
ALTERNATIVE_BUILDER           =          In order to create instances of this class, use the '{'@linkplain {0}.{1} embedded builder'}'.
ALTERNATIVE_INSTANTIATION     =          In order to create instances of this class, use any other constructor of this class or the '{'@linkplain {0}.{1} embedded builder'}'.
IMPLEMENTS_IMPLNOTE=@implNote In order to extend the code abilities, \
                              this class has been refactored by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                              In result, this class implements '{'@code {0}'}' now.
CLONE_IMPLNOTE=@implNote This actual '{'@code clone()'}' method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                         It creates a clone of '{'@code this'}' instance -- in the best possible manner --, but for some fields the current generic clone method may not return a perfect deep copy but a shallow copy. \
                         (For example, multi-dimensional arrays are not cloned because of the way how Java implements array cloning. \
                         Similar array/collection clones do not consider its contained elements. Further, '{'@link Cloneable'}' fields itself may create only shallow copies of itself.)
BUILDER_JAVADOC          =<p>Builder for (enclosing) '{'@link {0}'}'.</p>
BUILDER_IMPLNOTE         =@implNote This builder has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The current implementation is aware of all declared field as well as the JAXB-relevant class hierarchy.
BUILDER_ABSTRACT_IMPLNOTE=@implNote Since the '{'@linkplain {0} enclosing class'}' is '{'@code abstract'}', this builder is declared '{'@code abstract'}' too.
BUILDER_DEFAULT_CONSTRUCTOR  =<p>Creates a new instance.</p>
BUILDER_BLUEPRINT_CONSTRUCTOR=<p>Creates a new instance, initialised with the values of the '{'@code {1}'}' '{'@link {0}'}'.</p>
BUILDER_BLUEPRINT_PARAM      =the blueprint '{'@link {0}'}' instance to get all initial values from
BUILDER_WITHER_JAVADOC =<p>Sets the value of '{'@link #{0}'}'.</p>
BUILDER_WITHER_RETURN  ='{'@code this'}' builder instance for fluent API style
BUILDER_ADDER_JAVADOC  =<p>Adds an element into the collection value of '{'@link #{0}'}'.</p>
BUILDER_ADDER_RETURN   ='{'@code this'}' builder instance for fluent API style
BUILDER_REMOVER_JAVADOC=<p>Removes an element from the collection value of '{'@link #{0}'}'.</p>
BUILDER_REMOVER_RETURN ='{'@code this'}' builder instance for fluent API style
BUILDER_BUILD_JAVADOC          =<p>Returns a new instance of '{'@link {0}'}', with all fields initialised with the current values of '{'@code this'}' builder instance.</p>
BUILDER_BUILD_RETURN           =a new instance of '{'@link {0}'}', initialised with the values of '{'@code this'}' instance
BUILDER_BUILD_IMPLNOTE         =@implNote The current implementation refers to the all-values constructor of '{'@link {0}'}'.
BUILDER_BUILD_ABSTRACT_IMPLNOTE=@implNote Since the '{'@linkplain {0} enclosing class'}' is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                          However, the explicit declaration forces sub-classes to override this method accordingly. 
BUILDER_BUILD_RELAY_THROWS     =if thrown by the origin constructor (indicating an insufficient builder preparation)
BUILDER_METHOD_JAVADOC =<p>Returns a new instance of the '{'@linkplain {0}.{1} embedded builder'}', without any properties initialisation.</p>
BUILDER_METHOD_RETURN  =a new instance of the '{'@linkplain {0}.{1} embedded builder'}', without any properties initialisation
BUILDER_METHOD_IMPLNOTE=@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                        The current implementation refers to '{'@linkplain {0}.{1}#{1}() the default constructor'}' of the embedded builder.
TOBUILDER_METHOD_JAVADOC          =<p>Returns a new instance of the '{'@linkplain {0}.{1} embedded builder'}', with all properties initialised with the current values of '{'@code this'}' instance.</p>
TOBUILDER_METHOD_RETURN           =a new instance of the '{'@linkplain {0}.{1} embedded builder'}', initialised with the values of '{'@code this'}' instance
TOBUILDER_METHOD_IMPLNOTE         =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                             The current implementation refers to '{'@linkplain {0}.{1}#{1}({0}) the blueprint constructor'}' of the embedded builder.
TOBUILDER_METHOD_ABSTRACT_IMPLNOTE=@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                             Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                             However, the explicit declaration forces sub-classes to override this method accordingly.
WITHER_JAVADOC           =<p>Creates and returns a <strong>copy</strong> of '{'@code this'}' instance, but with a different value for '{'@link #{0}'}'.</p>
WITHER_RETURN            =a new instance of this class, similar to '{'@code this'}' instance but with a single differing field 
WITHER_IMPLNOTE          =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The implementation is effectively similar to '{'@code {0}'}'.
WITHER_ABSTRACT_IMPLNOTE =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                    However, the explicit declaration forces sub-classes to override this method accordingly.
ADDER_JAVADOC            =<p>Creates and returns a <strong>copy</strong> of '{'@code this'}' instance, but with an updated value for '{'@link #{0}'}' (i.e., containing an additional element).</p>
ADDER_RETURN             =a new instance of this class, similar to '{'@code this'}' instance but with a single differing field 
ADDER_IMPLNOTE           =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The implementation is effectively similar to '{'@code {0}'}'.
ADDER_ABSTRACT_IMPLNOTE  =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                    However, the explicit declaration forces sub-classes to override this method accordingly.
REMOVER_JAVADOC          =<p>Creates and returns a <strong>copy</strong> of '{'@code this'}' instance, but with an updated value for '{'@link #{0}'}' (i.e., missing a specific element).</p>
REMOVER_RETURN           =a new instance of this class, similar to '{'@code this'}' instance but with a single differing field 
REMOVER_IMPLNOTE         =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The implementation is effectively similar to '{'@code {0}'}'.
REMOVER_ABSTRACT_IMPLNOTE=@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                    However, the explicit declaration forces sub-classes to override this method accordingly.
PRIVATE_FACTORY_IMPLNOTE=@implNote In order to increase code robustness, \
                                   this factory method has been refactored by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                   In result, the access modifier is '{'@code private'}' now.
