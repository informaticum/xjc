# A. Description of the XJC Plugin

# B. Description of the XJC Plugin's Options
NOTNULL_COLLECTIONS_DESCRIPTION     =Each time a collection instance is initialised, the generated code shall instantiate an empty collection instance; \
                                     Each time a collection field will be assigned to some given value/parameter, the generated code shall check for ''null'' values and use an empty collection instance instead. \
                                     Default: false
UNMODIFIABLE_COLLECTIONS_DESCRIPTION=Whenever possible, the generated code shall treat collections as unmodifiable. \
                                     Default: false
DEFENSIVE_COPIES_DESCRIPTION        =Whenever possible, the generated code shall create defensive copies; \
                                     Though due to the Java way of copying/cloning instances, the current generic code may not return perfect deep copies for some fields (e.g., multidimensional arrays). \
                                     Default: false

# C. Main Javadoc Contents and Supply (@param, @throws, etc.)
INITIALISATION_BEGIN=<ul>
FIELD_INITIALISATION=<li>'{'@link {0}#{1} {1}'}' will be initialised with '{'@code {2}'}'</li>
INITIALISATION_END  =</ul>
PRIMITVE_ARGUMENT =new value for '{'@link {0}#{1} {1}'}'
DEFAULTED_ARGUMENT=new value for '{'@link {0}#{1} {1}'}' (can    be '{'@code null'}' because attribute is defaulted (using the value '{'@code {2}'}')
OPTIONAL_ARGUMENT =new value for '{'@link {0}#{1} {1}'}' (can    be '{'@code null'}' because attribute is optional)
REQUIRED_ARGUMENT =new value for '{'@link {0}#{1} {1}'}' (cannot be '{'@code null'}' because attribute is required)
ILLEGAL_VALUE     =iff the/any given value is invalid (e.g., illegally '{'@code null'}')
