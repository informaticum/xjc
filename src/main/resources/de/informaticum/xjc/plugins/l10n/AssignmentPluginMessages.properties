# A. Description of the XJC Plugin

# B. Description of the XJC Plugin's Options
NOTNULL_COLLECTIONS_DESCRIPTION     =Each time a collection instance is initialised, the generated code shall instantiate an empty collection instance (instead of leaving it '{'@code null'}'); \
                                     Each time a collection field will be assigned to some given value/parameter, the generated code shall check for ''null'' values and use an empty collection instance instead. \
                                     Default: false
UNMODIFIABLE_COLLECTIONS_DESCRIPTION=Whenever possible, the generated code shall treat collections as unmodifiable. \
                                     Default: false
DEFENSIVE_COPIES_DESCRIPTION        =Whenever possible, the generated code shall create defensive copies; \
                                     Though due to the Java way of copying/cloning instances, the current generic code may not return perfect deep copies for some fields (e.g., multidimensional arrays). \
                                     Default: false
PECS_PARAMETERS_DESCRIPTION         =Wherever suitable, generic parameters will be upgrade to its PECS version (automatically activates option ''{0}''). \
                                     Default: false

# C. Main Javadoc Contents and Supply (@param, @throws, etc.)
INITIALISATION_BEGIN=<ul>
FIELD_INITIALISATION=<li>'{'@link {0}#{1} {1}'}' will be initialised with '{'@code {2}'}'</li>
INITIALISATION_END  =</ul>
PRIMITVE_FIELD =new value for '{'@link {0}#{1} {1}'}'
DEFAULTED_FIELD=new value for '{'@link {0}#{1} {1}'}' (can    be '{'@code null'}' because field is defaulted (using the value '{'@code {2}'}')
OPTIONAL_FIELD =new value for '{'@link {0}#{1} {1}'}' (can    be '{'@code null'}' because field is optional)
REQUIRED_FIELD =new value for '{'@link {0}#{1} {1}'}' (cannot be '{'@code null'}' because field is required)
ILLEGAL_ARGUMENT=iff a given argument is invalid (e.g., illegally '{'@code null'}')
