# A. Description of the XJC Plugin
OPTION_DESCRIPTION=Generates construction code, i.e., constructors, builders, clones, factory methods.

# B. Description of the XJC Plugin's Options
DEFAULT_CONSTRUCTOR_DESCRIPTION          =Generates default constructor. \
                                          Default: false
VALUES_CONSTRUCTOR_DESCRIPTION           =Generates all-values constructor (automatically activates option ''{0}''). \
                                          Default: false
BASIC_CONSTRUCTOR_DESCRIPTION            =Generates basic-values constructor, based on all required fields (automatically activates option ''{0}''). \
                                          Default: false
COPY_CONSTRUCTOR_DESCRIPTION             =Generates copy constructor (automatically activates option ''{0}''). \
                                          Default: false
PROTECTED_DEFAULT_CONSTRUCTOR_DESCRIPTION=Modifies the accessibility of the default constructors onto ''protected'' (automatically activates option ''{0}''). \
                                          Default: false
CLONE_DESCRIPTION                        =Generates ''{0}'' method. \
                                          (Before activating this option, think about your idea twice. For example, read Effective Java, 3rd edition, Item 13: Override clone judiciously.) \
                                          Note, for some fields the current generic clone method may not return a perfect deep clone but a shallow clone. \
                                          Default: false
BUILDER_DESCRIPTION                      =Generates builder (automatically activates option ''{0}''). \
                                          Default: false
FACTORY_WITHER_DESCRIPTION               =Generates ''#withXyz(T)'' factory methods (automatically activates option ''{0}''). \
                                          Default: false
ADDITIONAL_WITHER_DESCRIPTION            =Generates additional Builder ''#withXyz(T)'' methods for collection fields (has no effect if ''{0}'' is deactivated); \
                                          Further, generate additional ''#withXyz(T)'' factory methods (has no effect if ''{1}'' is deactivated). \
                                          Default: false
HIDDEN_FACTORIES_DESCRIPTION             =Hides default factory methods of object factories. \
                                          Default: false
REMOVE_FACTORIES_DESCRIPTION             =Removes default factory methods of object factories (automatically deactivates option ''{0}''). \
                                          Default: false

# C. Main Javadoc Contents and Javadoc Supply (@param, @throws, etc.)
### Additional Constructors
CONSTRUCTOR_JAVADOC_BEGIN      =<p>Creates a new instance of this class. In detail,
CONSTRUCTOR_JAVADOC_SUPER_CLASS=the {0} constructor of the super class is called, and then
CONSTRUCTOR_JAVADOC_END        =all declared fields are assigned in succession.</p>
CONSTRUCTOR_COMMENT            =This actual {0} constructor has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
CONSTRUCTOR_BLUEPRINT_ARGUMENT =the blueprint instance
CONSTRUCTOR_ILLEGAL_BLUEPRINT  =iff the given blueprint instance is '{'@code null'}' or any blueprint instance''s field is invalid (e.g., '{'@code null'}')
### Protected Default Constructor
PROTECTED_CONSTRUCTOR_IMPLNOTE=@implNote In order to increase code robustness, \
                                         this constructor has been refactored by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                         In result, the access modifier is '{'@code protected'}' now. \
                                         (Note, since JAX-B''s reflective instantiation bases on a default constructor, it has not been removed entirely. \
                                         Likewise, it cannot be set to '{'@code private'}' because the similarly kept sub-classes'' constructors must have access to this constructor.)
PROTECTED_CONSTRUCTOR_COMMENT=In order to increase code robustness, this constructor has been set ''protected'' by the {0} during the JAXB/XJC code generating process.
ALTERNATIVE_INSTANTIATION=In order to create instances of this class, use any other constructor of this class or the '{'@linkplain {0} embedded builder'}'.
ALTERNATIVE_CONSTRUCTORS =In order to create instances of this class, use any other constructor of this class.
ALTERNATIVE_BUILDER      =In order to create instances of this class, use the '{'@linkplain {0} embedded builder'}'.
### Additional Interfaces
IMPLEMENTS_IMPLNOTE=@implNote In order to extend the code abilities, \
                              this class has been refactored by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                              In result, this class implements '{'@link {0}'}' now.
### clone() Method
CLONE_IMPLNOTE=@implNote This actual '{'@code clone()'}' method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                         It creates a clone of '{'@code this'}' instance -- in the best possible manner --, but for some fields the current generic clone method may not return a perfect deep copy but a shallow copy. \
                         (For example, multi-dimensional arrays are not cloned because of the way how Java implements array cloning. \
                         Similar array/collection clones do not consider its contained elements. Further, '{'@linkplain java.lang.Cloneable cloneable'}' fields itself may create only shallow copies of itself.)
CLONE_COMMENT=This actual ''#clone()'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process. \
			  It creates a clone of ''this'' instance -- in the best possible manner --, but for some fields the current generic clone method may not return a perfect deep copy but a shallow copy.
### Embedded Builder
BUILDER_JAVADOC          =<p>Builder for '{'@linkplain {0} enclosing class'}'.</p>
BUILDER_IMPLNOTE         =@implNote This builder has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The current implementation is aware of all declared field of the enclosing class as well as the JAXB-relevant class hierarchy.
BUILDER_COMMENT=This actual nested builder has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
BUILDER_ABSTRACT_IMPLNOTE=@implNote This builder has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    Since the enclosing class is '{'@code abstract'}', this builder is declared '{'@code abstract'}' too.
BUILDER_DEFAULT_CONSTRUCTOR  =<p>Creates a new instance of this embedded builder.</p>
BUILDER_DEFAULT_CONSTRUCTOR_COMMENT=This actual nested builder''s default constructor has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
BUILDER_BLUEPRINT_CONSTRUCTOR=<p>Creates a new instance of this embedded builder, initialised with the values of the blueprint instance.</p>
BUILDER_BLUEPRINT_ARGUMENT   =the blueprint instance to get all initial values from
BUILDER_BLUEPRINT_CONSTRUCTOR_COMMENT=This actual nested builder''s blueprint constructor has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
BUILDER_ILLEGAL_BLUEPRINT    =iff the given blueprint instance is '{'@code null'}' or any blueprint instance''s field is invalid (e.g., '{'@code null'}')
BUILDER_BUILD_JAVADOC          =<p>Returns a new instance of the '{'@linkplain {0}' enclosing class}', with all fields initialised with the current values of '{'@code this'}' builder instance.</p>
BUILDER_BUILD_IMPLNOTE         =@implNote The current implementation refers to the '{'@linkplain {0}#{1} all-values constructor'}' of the '{'@linkplain {0} enclosing class'}'.
BUILDER_BUILD_ABSTRACT_IMPLNOTE=@implNote Since the enclosing class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                          However, the explicit declaration forces sub-classes to override this method accordingly.
BUILDER_BUILD_RETURN           =a new instance of the '{'@linkplain {0}' enclosing class}', initialised with the values of '{'@code this'}' instance
BUILDER_BUILD_RELAY_THROWS     =if thrown by the origin constructor (indicating an insufficient builder preparation)
BUILDER_BUILD_COMMENT=This actual nested builder''s ''#build()'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
BUILDER_WITHER_JAVADOC =<p>Sets the value of '{'@link {0}#{1} {1}'}'.</p>
BUILDER_WITHER_RETURN  ='{'@code this'}' builder instance for fluent API style
BUILDER_WITHER_COMMENT=This actual nested builder''s ''#withXyz(...)'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
# TODO: Javadoc-Info about silently dropped #add(T) boolean result
BUILDER_ADDER_JAVADOC   =<p>Adds an element into the collection value of '{'@link {0}#{1} {1}'}'.</p>
BUILDER_ADDER_ARGUMENT  =additional value to be inserted into '{'@link {0}#{1} {1}'}'
BUILDER_ADDER_RETURN    ='{'@code this'}' builder instance for fluent API style
BUILDER_ADDER_COMMENT=This actual nested builder''s ''#withAdditionalXyz(...)'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
# TODO: Javadoc-Info about silently dropped #remove(T) boolean result
BUILDER_REMOVER_JAVADOC =<p>Removes an element from the collection value of '{'@link {0}#{1} {1}'}'.</p>
BUILDER_REMOVER_ARGUMENT=specific value to be removed from '{'@link {0}#{1} {1}'}'
BUILDER_REMOVER_RETURN  ='{'@code this'}' builder instance for fluent API style
BUILDER_REMOVER_COMMENT=This actual nested builder''s ''#withoutSpecificXyz(...)'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
# static #builder() Method
BUILDER_METHOD_JAVADOC =<p>Returns a new instance of the '{'@linkplain {0} embedded builder'}', without any builder properties initialisation.</p>
BUILDER_METHOD_IMPLNOTE=@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                  The current implementation refers to '{'@linkplain {0}#{1} the default constructor'}' of the '{'@linkplain {0} embedded builder'}'.
BUILDER_METHOD_COMMENT=This actual ''#builder()'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
BUILDER_METHOD_RETURN  =a new instance of the '{'@linkplain {0} embedded builder'}', without any properties initialisation
### instance #toBuilder() Method
TOBUILDER_METHOD_JAVADOC          =<p>Returns a new instance of the '{'@linkplain {0} embedded builder'}', with all properties initialised with the current values of '{'@code this'}' instance.</p>
TOBUILDER_METHOD_IMPLNOTE         =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                             The current implementation refers to '{'@linkplain {0}#{1} the blueprint constructor'}' of the embedded builder.
TOBUILDER_METHOD_COMMENT=This actual ''#toBuilder()'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
TOBUILDER_METHOD_ABSTRACT_IMPLNOTE=@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                             Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                             However, the explicit declaration forces sub-classes to override this method accordingly.
TOBUILDER_METHOD_RETURN           =a new instance of the '{'@linkplain {0} embedded builder'}', initialised with the values of '{'@code this'}' instance
TOBUILDER_ILLEGAL_INSTANCE        =iff '{'@code this'}' instance holds any invalid field and, thus, the '{'@linkplain {0} embedded builder'}' rejects it
### withXyz(T) Method
WITHER_JAVADOC           =<p>Creates and returns a <strong>copy</strong> of '{'@code this'}' instance, but with a different value for '{'@link {0}#{1} {1}'}'.</p>
WITHER_ARGUMENT          =different value for '{'@link {0}#{1} {1}'}'
WITHER_RETURN            =a new instance of this class, similar to '{'@code this'}' instance but with a single differing field
WITHER_IMPLNOTE          =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The implementation utilises the '{'@linkplain {0} embedded builder'}' and is effectively similar to '{'@code {1}'}'.
WITHER_COMMENT           =This actual ''#withXyz(...)'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
WITHER_ABSTRACT_IMPLNOTE =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                    However, the explicit declaration forces sub-classes to override this method accordingly.
### withAdditionalXyz(T) Method
ADDER_JAVADOC            =<p>Creates and returns a <strong>copy</strong> of '{'@code this'}' instance, but with an updated value for '{'@link {0}#{1} {1}'}' (i.e., containing an additional element).</p>
ADDER_ARGUMENT           =specific value to be added into '{'@link {0}#{1} {1}'}'
ADDER_RETURN             =a new instance of this class, similar to '{'@code this'}' instance but with a single differing field
ADDER_IMPLNOTE           =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The implementation utilises the '{'@linkplain {0} embedded builder'}' and is effectively similar to '{'@code {1}'}'.
ADDER_COMMENT            =This actual ''#withAdditionalXyz(...)'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
ADDER_ABSTRACT_IMPLNOTE  =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                    However, the explicit declaration forces sub-classes to override this method accordingly.
### withoutSpecificXyz(T) Method
REMOVER_JAVADOC          =<p>Creates and returns a <strong>copy</strong> of '{'@code this'}' instance, but with an updated value for '{'@link {0}#{1} {1}'}' (i.e., missing a specific element).</p>
REMOVER_ARGUMENT         =specific value to be removed from '{'@link {0}#{1} {1}'}'
REMOVER_RETURN           =a new instance of this class, similar to '{'@code this'}' instance but with a single differing field
REMOVER_IMPLNOTE         =@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    The implementation utilises the '{'@linkplain {0} embedded builder'}' and is effectively similar to '{'@code {1}'}'.
REMOVER_COMMENT          =This actual ''#withoutSpecificXyz(...)'' method has been generated by one of the the informaticum''s XJC plugins during the JAXB/XJC code generating process.
REMOVER_ABSTRACT_IMPLNOTE=@implNote This method has been generated by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                    Since this class is '{'@code abstract'}', this method is declared '{'@code abstract'}' too. \
                                    However, the explicit declaration forces sub-classes to override this method accordingly.
### ObjectFactory#createXyz() Factory Method
PRIVATE_FACTORY_IMPLNOTE=@implNote In order to increase code robustness, \
                                   this factory method has been refactored by <a href=\"https://github.com/informaticum/xjc\">the informaticum''s XJC plugins</a> during the JAXB/XJC code generating process. \
                                   In result, the access modifier is '{'@code private'}' now.
